#include "reportgenerator.h"
#include "ui_reportgenerator.h"
#include "core.h"
#include <QMessageBox>
#include <QDateTime>
#include <fstream>
using namespace std;

reportGenerator::reportGenerator(const QString& username, QWidget *parent)
    : QDialog(parent), ui(new Ui::reportGenerator), currentUser(username)
{
    ui->setupUi(this);
}

reportGenerator::reportGenerator(QWidget *parent)
    : QDialog(parent), ui(new Ui::reportGenerator)
{
    ui->setupUi(this);
}
reportGenerator::~reportGenerator()
{
    delete ui;
}

void reportGenerator::generateSimpleReport(const QString& timestamp)
{
    const auto& map = InventoryManager::getInventory();
    int total = 0;
    QStringList lowStock;

    for (const auto& item : map) {
        total += item.getQuantity();
        if (item.getQuantity() < 5) {
            lowStock << item.getName() + " (" + QString::number(item.getQuantity()) + ")";
        }
    }

    reportText = "Inventory Report\n\n";
    reportText += "Generated by: " + currentUser + "\n";
    reportText += "Generated on: " + timestamp + "\n\n";
    reportText += "Total items: " + QString::number(total) + "\n";
    reportText += "Low-stock items:\n";

    if (lowStock.isEmpty()) {
        reportText += "None\n";
    } else {
        for (const QString& name : lowStock) {
            reportText += "- " + name + "\n";
        }
    }
}

void reportGenerator::on_exportButton_clicked()
{
    QDateTime now = QDateTime::currentDateTime();
    QString timestampText = now.toString("yyyy-MM-dd HH:mm:ss");
    QString timestampForFile = now.toString("yyyy-MM-dd_HH-mm-ss");

    generateSimpleReport(timestampText);

    QString path = "../Reports/Report_" + currentUser + "_" + timestampForFile + ".txt";
    ofstream file(path.toStdString());

    if (!file.is_open()) {
        QMessageBox::warning(this, "Error", "Failed to save the report.");
        return;
    }

    file << reportText.toStdString();
    file.close();

    QMessageBox::information(this, "Report Exported",
                             "Report has been saved to:\n" + path);
}

void reportGenerator::on_GenerateReports_Back_clicked()
{
    if (parentWidget()) {
        parentWidget()->show();
    }
    this->hide();
}
